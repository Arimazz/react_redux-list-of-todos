{"version":3,"sources":["TodoList/TodoList.tsx","Api/Api.ts","Todos/Todos.tsx","Store/Store.ts","index.tsx","App.tsx"],"names":["TodoList","connect","dispatch","deleteItem","id","type","payload","todos","map","todo","userId","name","user","title","completed","key","className","onClick","getData","url","fetch","then","response","json","getCompleteTodos","a","Promise","all","todosLoaded","users","todosWithUsers","find","Todos","state","setTodos","sortByTitle","sortByStatus","sortByUserName","props","useState","isLoading","setIsLoading","handleLoad","todosFromServer","length","disabled","store","createStore","action","sort","b","localeCompare","Number","filter","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98fcf021.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\ninterface Props {\n  todos: Todo[];\n  deleteItem: (id: number) => void;\n}\n\nconst TodoListTemplate: FC<Props> = ({ todos, deleteItem }) => {\n  return (\n    <div>\n      {todos.map(todo => {\n        const {\n          id,\n          userId,\n          user: { name },\n          title,\n          completed,\n        } = todo;\n\n        return (\n          <div key={id} className=\"todo\">\n            <p className=\"todo__item\">\n              Task\n              {' '}\n              {id}\n            </p>\n            <p className=\"todo__item\">\n              UserID:&nbsp;\n              {userId}\n            </p>\n            <p className=\"todo__item\">\n              User:&nbsp;\n              {name}\n            </p>\n            <p className=\"todo__item\">\n              Task:&nbsp;\n              {title}\n            </p>\n            <p className=\"todo__item\">\n              Completed:&nbsp;\n              {completed ? '✔' : '❌'}\n            </p>\n            <button\n              type=\"button\"\n              className=\"todo_item\"\n              onClick={() => deleteItem(id)}\n            >\n              Delete\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    deleteItem: (id: number) => dispatch({ type: 'DELETE_ITEM', payload: id }),\n  };\n};\n\nexport const TodoList = connect(mapStateToProps, mapDispatchToProps)(TodoListTemplate);\n","const TODOS_API = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_API = 'https://jsonplaceholder.typicode.com/users';\n\nconst getData = <T>(url: string): Promise<T> => {\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getUsers = (): Promise<User[]> => {\n  return getData(USERS_API);\n};\n\nconst getTodos = (): Promise<Todo[]> => {\n  return getData(TODOS_API);\n};\n\nexport const getCompleteTodos = async () => {\n  const [todosLoaded, users] = await Promise.all([getTodos(), getUsers()]);\n\n  const todosWithUsers = todosLoaded.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  })) as Todo[];\n\n  return todosWithUsers;\n};\n","import React, { FC, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { TodoList } from '../TodoList/TodoList';\nimport { getCompleteTodos } from '../Api/Api';\n\ninterface Props {\n  todos: Todo[];\n  setTodos: (todos: Todo[]) => void;\n  sortByTitle: () => void;\n  sortByUserName: () => void;\n  sortByStatus: () => void;\n}\nexport const TodosTemplate: FC<Props> = (props) => {\n  const {\n    todos,\n    setTodos,\n    sortByTitle,\n    sortByUserName,\n    sortByStatus,\n  } = props;\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLoad = async () => {\n    setIsLoading(true);\n    const todosFromServer = await getCompleteTodos();\n\n    setTodos(todosFromServer);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Todos</h1>\n      {!todos.length && (\n        <button type=\"button\" onClick={handleLoad} disabled={isLoading}>\n          {isLoading ? 'Loading...' : 'Load Todos'}\n        </button>\n      )}\n      {!!todos.length && (\n        <>\n          <button type=\"button\" onClick={sortByTitle}>\n            Sort by title\n          </button>\n          <button type=\"button\" onClick={sortByStatus}>\n          Sort by Status\n          </button>\n          <button type=\"button\" onClick={sortByUserName}>\n          Sort by UserName\n          </button>\n        </>\n      )}\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: Todo[]) => {\n  return {\n    todos: state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setTodos: (todos: Todo[]) => dispatch({ type: 'SET_TODOS', payload: todos }),\n    sortByTitle: () => dispatch({ type: 'SORT_BY_TITLE' }),\n    sortByStatus: () => dispatch({ type: 'SORT_BY_STATUS' }),\n    sortByUserName: () => dispatch({ type: 'SORT_BY_USERNAME' }),\n  };\n};\n\nexport const Todos = connect(mapStateToProps, mapDispatchToProps)(TodosTemplate);\n","import { createStore, AnyAction } from 'redux';\n\nconst reducer = (state: Todo[] = [], action: AnyAction) => {\n  switch (action.type) {\n    case 'SET_TODOS':\n      return action.payload;\n\n    case 'SORT_BY_TITLE':\n      return [...state].sort((a, b) => a.title.localeCompare(b.title));\n\n    case 'SORT_BY_STATUS':\n      return [...state].sort((a, b) => Number(a.completed) - Number(b.completed));\n\n    case 'SORT_BY_USERNAME':\n      return [...state].sort((a, b) => a.user.name.localeCompare(b.user.name));\n\n    case 'DELETE_ITEM':\n      return [...state].filter(item => item.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n","import React, { FC } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { Todos } from './Todos/Todos';\nimport { store } from './Store/Store';\n\n\nexport const App: FC = () => {\n  return (\n    <Provider store={store}>\n      <Todos />\n    </Provider>\n  );\n};\n"],"sourceRoot":""}